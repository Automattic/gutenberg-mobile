
buildscript {
    ext {
        gradlePluginVersion = '3.3.1'
        kotlinVersion = '1.3.11'
    }

    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$gradlePluginVersion"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

// fallback flag value for when lib is compiled individually (e.g. via jitpack)
project.ext.buildGutenbergFromSource = false

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'

// import the `readReactNativeVersion()` function
apply from: 'https://gist.githubusercontent.com/hypest/742448b9588b3a0aa580a5e80ae95bdf/raw/8eb62d40ee7a5104d2fcaeff21ce6f29bd93b054/readReactNativeVersion.gradle'

group='com.github.wordpress-mobile.gutenberg-mobile'


// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
        'main',     // main sample code; look here for the interesting stuff.
        'common',   // components that are reused by multiple samples
        'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                java.srcDirs += "src/${dir}/kotlin"
                res.srcDirs "src/${dir}/res"
            }
        }
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    jcenter()
    google()

    maven { url "https://jitpack.io" }
   /// mavenCentral()
    if (!rootProject.ext.buildGutenbergFromSource) {
        // if not building from source (where the node_modules dir is used), use a remote RN maven repo
        def reactNativeRepo = 'https://dl.bintray.com/wordpress-mobile/react-native-mirror/'
        println "Will use the RN maven repo at ${reactNativeRepo}"
        maven { url reactNativeRepo }
    }
}

dependencies {
    if (rootProject.ext.buildGutenbergFromSource) {
        implementation "com.facebook.react:react-native:+" // From node_modules.
    } else {
        def rnVersion = readReactNativeVersion('../package.json', 'peerDependencies')
        implementation "com.facebook.react:react-native:${rnVersion}" // From Maven repo
    }
}
  