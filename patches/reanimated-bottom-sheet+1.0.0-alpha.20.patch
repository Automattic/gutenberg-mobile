diff --git a/node_modules/reanimated-bottom-sheet/lib/module/index.js b/node_modules/reanimated-bottom-sheet/lib/module/index.js
index 67bcbe9..2944b65 100644
--- a/node_modules/reanimated-bottom-sheet/lib/module/index.js
+++ b/node_modules/reanimated-bottom-sheet/lib/module/index.js
@@ -210,7 +210,6 @@ export default class BottomSheetBehavior extends React.Component {
         }
       }
     }) => this.state.heightOfContent.setValue(height - this.state.initSnap));
-
     this.panRef = props.innerGestureHandlerRefs[0];
     this.master = props.innerGestureHandlerRefs[1];
     this.tapRef = props.innerGestureHandlerRefs[2];
@@ -219,6 +218,7 @@ export default class BottomSheetBehavior extends React.Component {
       snapPoints,
       init
     } = this.state;
+
     const middlesOfSnapPoints = [];
 
     for (let i = 1; i < snapPoints.length; i++) {
@@ -253,12 +253,17 @@ export default class BottomSheetBehavior extends React.Component {
     const {
       snapPoints
     } = this.state;
-
     if (this.props.enabledBottomClamp && snapPoints !== prevState.snapPoints) {
       this.clampingValue.setValue(snapPoints[snapPoints.length - 1]);
     }
   }
 
+  componentDidMount() {
+    if(this.props.enabledBottomInitialAnimation) {
+      setTimeout(() => {this.snapTo(this.props.initialSnap)}, 200);
+    }
+  }
+
   runSpring(clock, value, velocity, dest, wasRun, isManuallySet, valueToBeZeroed) {
     const state = {
       finished: new Value(0),
@@ -338,9 +343,8 @@ export default class BottomSheetBehavior extends React.Component {
     let init = sortedPropsSnapPoints[0].val - sortedPropsSnapPoints[propsToNewIndices[initialSnap]].val;
 
     if (props.enabledBottomInitialAnimation) {
-      init = sortedPropsSnapPoints[sortedPropsSnapPoints.length - 1 - propsToNewIndices[initialSnap]].val;
+      init = sortedPropsSnapPoints[0].val;
     }
-
     return {
       init,
       propsToNewIndices,
